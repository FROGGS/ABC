use v6;
use ABC::Header;
use ABC::Tune;
use ABC::Grammar;
use ABC::Actions;
use ABC::Duration; #OK
use ABC::Note;
use ABC::LongRest;
use ABC::Utils;

sub print-header($out, $header) {
    for $header.lines -> $header-line {
        say $header-line.key ~ ":" ~ $header-line.value;
    }
}

sub print-music($out, $tune) {
    for $tune.music -> $element {
        print ElementToStr($element);
    }
}

sub Transpose($in, $out) {
    my $actions = ABC::Actions.new;
    my $match = ABC::Grammar.parse($in.slurp, :rule<tune_file>, :$actions);
    die "Did not match ABC grammar: last tune understood:\n { $actions.current-tune }" unless $match;

    for @( $match.ast ) -> $tune {
        $*ERR.say: "Working on { $tune.header.get-first-value("T") // $tune.header.get-first-value("X") }";
        
        print-header($out, $tune.header);

        # my $key = $tune.header.get-first-value("K");
        # my $meter = $tune.header.get-first-value("M");
        # my $length = $tune.header.get-first-value("L") // "1/8";

        print-music($out, $tune);
    }
}

multi sub MAIN() {
    Transpose($*IN, $*OUT);
}
